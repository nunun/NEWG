version: '3.4'
services:
  client:
    ports:
      - 80:80
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  # TODO host network mode
  server:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  matching:
    ports:
      - 7755:7755
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  api:
    ports:
      - 7780:7780
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mindlink:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  rabbitmq:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  couchdb:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  redis:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  portainer:
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 19000:9000
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  portainer_data:
