Services:
  # var WebAPI = require('protocols').Services.WebAPI
  # using WebAPI = Protocols.Services.WebAPI
  WebAPI:
    - methodName: test
      MethodName: Test
      description: テストインターフェイス
      apiPath: /test
      request:
        - name: value
          type: int
      response:
        - name: value
          type: int

  # var Models = require('protocols').Services.Models;
  # using Models = Protocols.Services.Models;
  Models:
    - ModelName: Test
      description: テストモデル
      properties:
        - name: value
          type: int

    - ModelName: User
      description: ユーザ情報
      properties:
        - name: value
          type: int

  # var Enums = require('protocols').Services.Enums;
  # using Enums = Protocols.Services.Enums;
  Enums:
    - EnumName: MyEnum
      definitions:
        - name: Foo
          value: 0
        - name: Bar
        - name: Qux

  # var Consts = require('protocols').Services.Consts;
  # using Consts = Protocols.Services.Consts;
  Consts:
    - CONST_NAME: MY_CONST
      definitions:
        - name: MY_VALUE
          type: int
          value: 1

################################################################################
################################################################################
################################################################################
# TODO
templates:

  # models.js
  - projects_path: /generate/nodejs
    generate_path: protocols/models.js
    template: |
      // auto generated by protocols.
      module.exports = {};
      <% models.each do |t| %>
      // <%= t["title"] %>
      module.exports.<%= t["name"] %> = function() {
        return {
        <%- t["properties"].each do |p| -%>
        <%- case p["type"]
             when "string" -%>
            <%= p["name"] %>: <%= (p.key?("def"))? "\"#{p["def"]}\"" : "null" %>,
        <%- when "integer" -%>
            <%= p["name"] %>: <%= (p.key?("def"))? "#{p["def"]}" : 0 %>,
        <%- when "boolean" -%>
            <%= p["name"] %>: <%= (p.key?("def"))? "#{p["def"]}" : false %>,
        <%- when "list" -%>
            <%= p["name"] %>: [],
        <%- end -%>
        <%- end -%>
        };
      }
      <% end %>

  # cmd.js
  - projects_path: /generate/nodejs
    generate_path: protocols/cmd.js
    template: |
      // auto generated by protocols.
      module.exports = {};
      module.exports.API = {};
      module.exports.API.MATCHING_REQUEST  = 1;
      module.exports.API.MATCHING_RESPONSE = 2;

  # index.js
  - projects_path: /generate/nodejs
    generate_path: protocols/index.js
    template: |
      // auto generated by protocols.
      module.exports.Models = require('./models.js');
      module.exports.CMD    = require('./cmd.js');

  # Models.cs
  - projects_path: /generate/cs
    generate_path: Protocols/Models.cs
    template: |
      // auto generated by protocols.
      namespace Protocols.Models {
          // TODO
      }

  # CMD.cs
  - projects_path: /generate/cs
    generate_path: Protocols/CMD.cs
    template: |
      // auto generated by protocols.
      namespace Protocols.CMD {
          // TODO
      }

