# スペック一覧
specs:
  Services:
    # WebAPI
    # var WebAPI = require('protocols').Services.WebAPI
    # using WebAPI = Protocols.Services.WebAPI
    WebAPI:
      - name: Test
        description: テストインターフェイス
        api_path: /test
        request:
          - name: value
            type: int
        response:
          - name: value
            type: int

    # モデル
    # var Models = require('protocols').Services.Models;
    # using Models = Protocols.Services.Models;
    Models:
      - name: MyModel
        description: テストモデル
        properties:
          - name: value
            type: int

      - name: User
        description: ユーザ情報
        properties:
          - name: value
            type: int

    # 列挙
    # var Enums = require('protocols').Services.Enums;
    # using Enums = Protocols.Services.Enums;
    Enums:
      - name: MyEnum
        description: テスト列挙
        definitions:
          - name: Foo
            value: 0
          - name: Bar
          - name: Qux

    # 定数
    # var Consts = require('protocols').Services.Consts;
    # using Consts = Protocols.Services.Consts;
    Consts:
      - name: MY_CONST
        description: テスト定数
        definitions:
          - name: MY_VALUE
            type: int
            value: 1

################################################################################
################################################################################
################################################################################
# コード生成テンプレート
templates:
  # models.js
  - generate: WebAPI
    in: /output/nodejs
    output: /output/nodejs/<%= output_name %>/protocols/<%= spec_name.to_snake %>.<%= generate_name.to_snake %>.js
    template: |
      // test

#     // auto generated by protocols.
#     module.exports = {};
#     <% models.each do |t| %>
#     // <%= t["title"] %>
#     module.exports.<%= t["name"] %> = function() {
#       return {
#       <%- t["properties"].each do |p| -%>
#       <%- case p["type"]
#            when "string" -%>
#           <%= p["name"] %>: <%= (p.key?("def"))? "\"#{p["def"]}\"" : "null" %>,
#       <%- when "integer" -%>
#           <%= p["name"] %>: <%= (p.key?("def"))? "#{p["def"]}" : 0 %>,
#       <%- when "boolean" -%>
#           <%= p["name"] %>: <%= (p.key?("def"))? "#{p["def"]}" : false %>,
#       <%- when "list" -%>
#           <%= p["name"] %>: [],
#       <%- end -%>
#       <%- end -%>
#       };
#     }
#     <% end %>
#  # cmd.js
#  - projects_path: /generate/nodejs
#    generate_path: protocols/cmd.js
#    template: |
#      // auto generated by protocols.
#      module.exports = {};
#      module.exports.API = {};
#      module.exports.API.MATCHING_REQUEST  = 1;
#      module.exports.API.MATCHING_RESPONSE = 2;
#
#  # index.js
#  - projects_path: /generate/nodejs
#    generate_path: protocols/index.js
#    template: |
#      // auto generated by protocols.
#      module.exports.Models = require('./models.js');
#      module.exports.CMD    = require('./cmd.js');
#
#  # Models.cs
#  - projects_path: /generate/cs
#    generate_path: Protocols/Models.cs
#    template: |
#      // auto generated by protocols.
#      namespace Protocols.Models {
#          // TODO
#      }
#
#  # CMD.cs
#  - projects_path: /generate/cs
#    generate_path: Protocols/CMD.cs
#    template: |
#      // auto generated by protocols.
#      namespace Protocols.CMD {
#          // TODO
#      }
#
